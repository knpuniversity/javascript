{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "dom-basics-simple-click-listener",
            "name": "DOM Basics: Simple click listener",
            "description": null
        },
        {
            "id": "dom-basics-scripts-in-header",
            "name": "DOM Basics: Scripts in header",
            "description": null
        },
        {
            "id": "dom-basics-document-ready",
            "name": "DOM Basics: document.ready()",
            "description": null
        },
        {
            "id": "dom-basics-script-in-middle-of-page",
            "name": "DOM Basics: script in middle of page",
            "description": null
        },
        {
            "id": "dom-basics-js-back-to-footer",
            "name": "DOM Basics: JS back to footer",
            "description": null
        },
        {
            "id": "dom-basics-our-js-back-into-footer",
            "name": "DOM Basics: Our JS back into footer",
            "description": null
        },
        {
            "id": "event-bubbling-add-2nd-listener",
            "name": "Event Bubbling: Add 2nd listener",
            "description": null
        },
        {
            "id": "event-bubbling-find-table-for-performance",
            "name": "Event Bubbling: Find $table for performance",
            "description": null
        },
        {
            "id": "event-bubbling-returning-false",
            "name": "Event Bubbling: Returning false",
            "description": null
        },
        {
            "id": "event-bubbling-event-argument",
            "name": "Event Bubbling: event argument",
            "description": null
        },
        {
            "id": "event-bubbling-remove-stoppropagation",
            "name": "Event Bubbling: Remove stopPropagation()",
            "description": null
        },
        {
            "id": "event-target-using-event-target",
            "name": "Event.target: Using event.target",
            "description": null
        },
        {
            "id": "event-target-console-log-dom-element-object",
            "name": "Event.target: console.log() DOM Element Object",
            "description": null
        },
        {
            "id": "event-target-console-dir-dom-element-object",
            "name": "Event.target: console.dir() DOM Element Object",
            "description": null
        },
        {
            "id": "event-target-holds-a-collection-of-elements",
            "name": "Event.target: $ holds a collection of elements",
            "description": null
        },
        {
            "id": "event-target-show-another-collection-example",
            "name": "Event.target: Show another $ collection example",
            "description": null
        },
        {
            "id": "event-target-using-dom-element-directly",
            "name": "Event.target: Using DOM Element directly",
            "description": null
        },
        {
            "id": "event-target-using-jquery-again",
            "name": "Event.target: Using jQuery again",
            "description": null
        },
        {
            "id": "currenttarget-this-logging-e-target",
            "name": "currentTarget & this: logging e.target",
            "description": null
        },
        {
            "id": "currenttarget-this-logging-e-currenttarget",
            "name": "currentTarget & this: logging e.currentTarget",
            "description": null
        },
        {
            "id": "currenttarget-this-show-identical",
            "name": "currentTarget & this: Show identical",
            "description": null
        },
        {
            "id": "currenttarget-this-use-this",
            "name": "currentTarget & this: Use this",
            "description": null
        },
        {
            "id": "currenttarget-this-confidently-use-this",
            "name": "currentTarget & this: Confidently use this",
            "description": null
        },
        {
            "id": "currenttarget-this-remove-delete-text",
            "name": "currentTarget & this: Remove delete text",
            "description": null
        },
        {
            "id": "data-attribute-data-url-ajax-call",
            "name": "data Attribute: data-url & AJAX call",
            "description": null
        },
        {
            "id": "data-attribute-update-total-weight",
            "name": "data Attribute: Update total weight",
            "description": null
        },
        {
            "id": "basic-object-refactor-to-basic-replogapp",
            "name": "Basic Object: Refactor to basic RepLogApp",
            "description": null
        },
        {
            "id": "basic-object-hitting-the-this-trap",
            "name": "Basic Object: Hitting the this trap",
            "description": null
        },
        {
            "id": "basic-object-using-static-syntax",
            "name": "Basic Object: Using \"static\" syntax",
            "description": null
        },
        {
            "id": "basic-object-more-helper-methods",
            "name": "Basic Object: More helper methods",
            "description": null
        },
        {
            "id": "managing-this-using-this-in-callback",
            "name": "Managing this: Using this in callback",
            "description": null
        },
        {
            "id": "managing-this-logging-this",
            "name": "Managing this: logging this",
            "description": null
        },
        {
            "id": "managing-this-changing-this-via-call",
            "name": "Managing this: changing this via .call",
            "description": null
        },
        {
            "id": "managing-this-fixing-with-bind",
            "name": "Managing this: Fixing with .bind",
            "description": null
        },
        {
            "id": "managing-this-using-bind-on-callbacks",
            "name": "Managing this: Using .bind on callbacks",
            "description": null
        },
        {
            "id": "managing-this-using-self",
            "name": "Managing this: Using self",
            "description": null
        },
        {
            "id": "iife-refactor-to-external-js",
            "name": "IIFE: Refactor to external JS",
            "description": null
        },
        {
            "id": "iife-refactor-to-faux-private-method",
            "name": "IIFE: Refactor to \"faux\" private method",
            "description": null
        },
        {
            "id": "iife-refactor-into-private-helper-object",
            "name": "IIFE: Refactor into private helper object",
            "description": null
        },
        {
            "id": "iife-i-can-access-helper",
            "name": "IIFE: I can access helper",
            "description": null
        },
        {
            "id": "iife-wrap-in-iife",
            "name": "IIFE: Wrap in IIFE",
            "description": null
        },
        {
            "id": "window-setting-our-var-on-window",
            "name": "Window: Setting our var on window",
            "description": null
        },
        {
            "id": "iife-passing-in-vars",
            "name": "IIFE: Passing in vars",
            "description": null
        },
        {
            "id": "window-forget-var",
            "name": "Window: Forget var",
            "description": null
        },
        {
            "id": "window-window-is-this",
            "name": "Window: window is this",
            "description": null
        },
        {
            "id": "window-use-strict",
            "name": "Window: use strict",
            "description": null
        },
        {
            "id": "window-re-add-var",
            "name": "Window: re-add var",
            "description": null
        },
        {
            "id": "real-object-refactor-helper-syntax",
            "name": "Real Object: Refactor helper syntax",
            "description": null
        },
        {
            "id": "real-object-create-the-object-no-prototype",
            "name": "Real Object: Create the object, no prototype",
            "description": null
        },
        {
            "id": "real-object-printing-object-vs-instance",
            "name": "Real Object: Printing Object vs instance",
            "description": null
        },
        {
            "id": "real-object-use-prototype",
            "name": "Real Object: Use prototype",
            "description": null
        },
        {
            "id": "real-object-playing-with-proto",
            "name": "Real Object: Playing with __proto__",
            "description": null
        },
        {
            "id": "real-object-string-array-proto",
            "name": "Real Object: String & Array proto",
            "description": null
        },
        {
            "id": "real-object-create-2-instances",
            "name": "Real Object: Create 2 instances",
            "description": null
        },
        {
            "id": "real-object-remove-debug-code",
            "name": "Real Object: Remove debug code",
            "description": null
        },
        {
            "id": "real-object-use-extend",
            "name": "Real Object: Use $.extend",
            "description": null
        },
        {
            "id": "real-object-refactor-replogapp",
            "name": "Real Object: Refactor RepLogApp",
            "description": null
        },
        {
            "id": "new-form-setup-making-wrapper-bigger",
            "name": "New Form: Setup & Making $wrapper bigger",
            "description": null
        },
        {
            "id": "new-form-simple-ajax-submit",
            "name": "New Form: Simple AJAX submit",
            "description": null
        },
        {
            "id": "new-form-return-html-on-ajax",
            "name": "New Form: Return HTML on AJAX",
            "description": null
        },
        {
            "id": "new-form-appending-row-on-success",
            "name": "New Form: Appending row on success",
            "description": null
        },
        {
            "id": "new-form-updating-total",
            "name": "New Form: Updating total",
            "description": null
        },
        {
            "id": "delegate-using-delegate-selectors",
            "name": "Delegate: Using delegate selectors",
            "description": null
        },
        {
            "id": "use-api-stop-using-symfony-form",
            "name": "Use API: Stop using Symfony form",
            "description": null
        },
        {
            "id": "use-api-remove-ajax-controller-code",
            "name": "Use API: Remove AJAX controller code",
            "description": null
        },
        {
            "id": "use-api-simple-field-names",
            "name": "Use API: Simple field names",
            "description": null
        },
        {
            "id": "use-api-send-json-form-submit",
            "name": "Use API: Send JSON Form Submit",
            "description": null
        },
        {
            "id": "use-api-starting-to-handle-errors",
            "name": "Use API: Starting to handle errors",
            "description": null
        },
        {
            "id": "use-api-mapping-errors-onto-form",
            "name": "Use API: Mapping errors onto form",
            "description": null
        },
        {
            "id": "use-api-resetting-form-on-success",
            "name": "Use API: Resetting form on success",
            "description": null
        },
        {
            "id": "use-api-print-data-back-from-success",
            "name": "Use API: Print data back from success",
            "description": null
        },
        {
            "id": "use-api-render-template",
            "name": "Use API: Render _ template",
            "description": null
        },
        {
            "id": "render-reps-install-fosjsroutingbundle",
            "name": "Render Reps: Install FOSJSRoutingBundle",
            "description": null
        },
        {
            "id": "render-reps-render-row-from-js",
            "name": "Render Reps: Render row from JS",
            "description": null
        },
        {
            "id": "promises-using-done-as-an-example",
            "name": "Promises: Using .done as an example",
            "description": null
        },
        {
            "id": "promises-changing-to-then",
            "name": "Promises: Changing to .then",
            "description": null
        },
        {
            "id": "promises-returning-in-then",
            "name": "Promises: Returning in .then",
            "description": null
        },
        {
            "id": "promises-using-rejected-2nd-then-arg",
            "name": "Promises: Using rejected 2nd .then arg",
            "description": null
        },
        {
            "id": "promises-using-catch-instead",
            "name": "Promises: Using .catch instead",
            "description": null
        },
        {
            "id": "promises-putting-then-all-first",
            "name": "Promises: Putting .then all first",
            "description": null
        },
        {
            "id": "promises-refactor-to-ajax-promise-format",
            "name": "Promises: Refactor to $.ajax promise format",
            "description": null
        },
        {
            "id": "promises-refactor-to-save-method",
            "name": "Promises: Refactor to save method",
            "description": null
        },
        {
            "id": "promises-print-location-header-after-create",
            "name": "Promises: Print Location header after create",
            "description": null
        },
        {
            "id": "promises-logging-data-throw-arg",
            "name": "Promises: Logging data & throw arg",
            "description": null
        },
        {
            "id": "promises-checking-error-instanceof",
            "name": "Promises: Checking error instanceof",
            "description": null
        },
        {
            "id": "promises-re-throw-and-2nd-catch",
            "name": "Promises: Re-throw and 2nd catch",
            "description": null
        },
        {
            "id": "promises-printing-location-header",
            "name": "Promises: Printing Location header",
            "description": null
        },
        {
            "id": "promises-ajax-to-fetch-one-replog",
            "name": "Promises: AJAX to fetch one RepLog",
            "description": null
        },
        {
            "id": "promises-return-our-own-promise",
            "name": "Promises: Return our own Promise",
            "description": null
        },
        {
            "id": "promises-reject",
            "name": "Promises: Reject",
            "description": null
        },
        {
            "id": "promises-massage-reject-value",
            "name": "Promises: Massage reject value",
            "description": null
        },
        {
            "id": "promises-sweetalert2",
            "name": "Promises: SweetAlert2",
            "description": null
        },
        {
            "id": "promises-using-catch",
            "name": "Promises: Using catch",
            "description": null
        },
        {
            "id": "promises-preconfirm-with-real-promise",
            "name": "Promises: preConfirm with real Promise",
            "description": null
        },
        {
            "id": "promises-using-deletereplog-in-preconfirm",
            "name": "Promises: using _deleteRepLog in preConfirm",
            "description": null
        },
        {
            "id": "ep2-prep-upgrade-deps",
            "name": "Ep2 Prep: Upgrade deps",
            "description": null
        },
        {
            "id": "arrow-functions-full-body",
            "name": "Arrow Functions: Full body",
            "description": null
        },
        {
            "id": "arrow-functions-no-around-arg",
            "name": "Arrow Functions: No () around arg",
            "description": null
        },
        {
            "id": "arrow-functions-this-preserved",
            "name": "Arrow Functions: this preserved",
            "description": null
        },
        {
            "id": "arrow-functions-no-more-self",
            "name": "Arrow Functions: no more self",
            "description": null
        },
        {
            "id": "arrow-functions-use-them-on-delete-ops",
            "name": "Arrow Functions: Use them on delete ops",
            "description": null
        },
        {
            "id": "arrow-functions-convert-the-rest",
            "name": "Arrow Functions Convert the rest",
            "description": null
        },
        {
            "id": "arrow-functions-return-without-a-body",
            "name": "Arrow Functions: Return without a body",
            "description": null
        },
        {
            "id": "node-first-node-play-script",
            "name": "Node: first node play script",
            "description": null
        },
        {
            "id": "node-playing-with-arrow-functions",
            "name": "Node: Playing with arrow functions",
            "description": null
        },
        {
            "id": "let-trying-it-once",
            "name": "let: Trying it once",
            "description": null
        },
        {
            "id": "let-playing-with-var",
            "name": "let: Playing with var",
            "description": null
        },
        {
            "id": "let-using-var-multiple-times",
            "name": "let: Using var multiple times",
            "description": null
        },
        {
            "id": "let-putting-second-var-in-new-function",
            "name": "let: Putting second var in new function",
            "description": null
        },
        {
            "id": "let-change-to-let-show-scoping",
            "name": "let: change to let, show scoping",
            "description": null
        },
        {
            "id": "let-without-another-let-same-var",
            "name": "let: without another let, same var",
            "description": null
        },
        {
            "id": "let-log-a-completely-undefined-var",
            "name": "let: log a completely undefined var",
            "description": null
        },
        {
            "id": "let-log-before-a-let",
            "name": "let: log before a let",
            "description": null
        },
        {
            "id": "let-show-var-hoisting",
            "name": "let: show var hoisting",
            "description": null
        },
        {
            "id": "let-change-to-all-let",
            "name": "let: Change to all let",
            "description": null
        },
        {
            "id": "const-try-it-out",
            "name": "const: Try it out",
            "description": null
        },
        {
            "id": "const-removing-assignment",
            "name": "const: Removing assignment",
            "description": null
        },
        {
            "id": "const-object-keys-not-protected",
            "name": "const: Object keys not protected",
            "description": null
        },
        {
            "id": "const-using-const-everywhere",
            "name": "const: Using const everywhere",
            "description": null
        },
        {
            "id": "object-literals-show-data-data",
            "name": "Object Literals: Show data: data",
            "description": null
        },
        {
            "id": "object-literals-use-value-as-key-val",
            "name": "Object Literals: use value as key+val",
            "description": null
        },
        {
            "id": "object-literals-funtion-key-shorthand",
            "name": "Object Literals: funtion key shorthand",
            "description": null
        },
        {
            "id": "default-args-new-gettotalweightstring-func",
            "name": "Default args: New getTotalWeightString func",
            "description": null
        },
        {
            "id": "default-args-add-arg-to-method",
            "name": "Default args: add arg to method",
            "description": null
        },
        {
            "id": "default-args-use-default-arg",
            "name": "Default args: use default arg",
            "description": null
        },
        {
            "id": "classes-basic-class-syntax",
            "name": "Classes: Basic Class syntax",
            "description": null
        },
        {
            "id": "classes-fully-convert-helper",
            "name": "Classes: Fully convert Helper",
            "description": null
        },
        {
            "id": "classes-start-to-move-replogapp",
            "name": "Classes: Start to move RepLogApp",
            "description": null
        },
        {
            "id": "classes-change-selectors-prop-to-method",
            "name": "Classes: Change _selectors prop to method",
            "description": null
        },
        {
            "id": "classes-moving-rest-of-replogapp-to-class",
            "name": "Classes: Moving rest of RepLogApp to class",
            "description": null
        },
        {
            "id": "classes-showing-get-syntax",
            "name": "Classes: Showing get syntax",
            "description": null
        },
        {
            "id": "classes-export-replogapp-to-window",
            "name": "Classes: export RepLogApp to Window",
            "description": null
        },
        {
            "id": "classes-static-method",
            "name": "Classes: static method",
            "description": null
        },
        {
            "id": "classes-referencing-it-statically",
            "name": "Classes: Referencing it statically",
            "description": null
        },
        {
            "id": "classes-a-helper-static-method-example",
            "name": "Classes: A Helper static method example",
            "description": null
        },
        {
            "id": "extends-create-a-simple-class",
            "name": "Extends: Create a simple class",
            "description": null
        },
        {
            "id": "extends-extend-with-a-new-class",
            "name": "Extends: Extend with a new class",
            "description": null
        },
        {
            "id": "extends-override-method",
            "name": "Extends: Override method",
            "description": null
        },
        {
            "id": "extends-call-super-method",
            "name": "Extends: Call super method",
            "description": null
        },
        {
            "id": "extends-override-constructor",
            "name": "Extends: Override constructor",
            "description": null
        },
        {
            "id": "extends-calling-super",
            "name": "Extends: Calling super()",
            "description": null
        },
        {
            "id": "destructuring-logging-replog",
            "name": "Destructuring: logging repLog",
            "description": null
        },
        {
            "id": "destructuring-setting-local-vars-from-replog",
            "name": "Destructuring: setting local vars from repLog",
            "description": null
        },
        {
            "id": "destructuring-using-a-bad-key",
            "name": "Destructuring: Using a bad key",
            "description": null
        },
        {
            "id": "destructuring-default-for-bad-key",
            "name": "Destructuring: default for bad key",
            "description": null
        },
        {
            "id": "spread-operator-simple-function-call-example",
            "name": "Spread Operator: Simple function call example",
            "description": null
        },
        {
            "id": "spread-operator-passing-4th-item",
            "name": "Spread Operator: Passing 4th item",
            "description": null
        },
        {
            "id": "spread-operator-combining-arrays",
            "name": "Spread Operator: Combining arrays",
            "description": null
        },
        {
            "id": "spread-operator-bad-copy-of-array",
            "name": "Spread Operator: Bad copy of array",
            "description": null
        },
        {
            "id": "spread-operator-copy-via-spread-op",
            "name": "Spread Operator: Copy via spread op",
            "description": null
        },
        {
            "id": "template-strings-simple-example-no-ticks",
            "name": "Template Strings: Simple example, no ticks",
            "description": null
        },
        {
            "id": "template-strings-add-expressions",
            "name": "Template Strings: Add expressions",
            "description": null
        },
        {
            "id": "template-strings-moving-template-with-single-quotes",
            "name": "Template Strings: Moving template with single quotes",
            "description": null
        },
        {
            "id": "template-strings-using-ticks",
            "name": "Template Strings: Using ticks!",
            "description": null
        },
        {
            "id": "template-strings-expressions-with-undefined-vars",
            "name": "Template Strings: Expressions with undefined vars",
            "description": null
        },
        {
            "id": "template-strings-turn-tpl-into-function",
            "name": "Template Strings: turn tpl into function",
            "description": null
        },
        {
            "id": "template-strings-tagged-template-for-upper",
            "name": "Template Strings: Tagged template for upper",
            "description": null
        },
        {
            "id": "template-strings-removed-tagged-template",
            "name": "Template Strings: Removed tagged template",
            "description": null
        },
        {
            "id": "for-of-use-for-of-everywhere",
            "name": "For of: Use for of everywhere!",
            "description": null
        },
        {
            "id": "maps-creating-an-old-hash",
            "name": "Maps: Creating an old hash",
            "description": null
        },
        {
            "id": "maps-use-a-nice-map",
            "name": "Maps: Use a nice map",
            "description": null
        },
        {
            "id": "maps-map-prototype-has",
            "name": "Maps: Map.prototype.has",
            "description": null
        },
        {
            "id": "maps-use-an-array-key",
            "name": "Maps: Use an Array key",
            "description": null
        },
        {
            "id": "maps-use-array-prorotype-size",
            "name": "Maps: Use Array.prorotype.size",
            "description": null
        },
        {
            "id": "weakmap-change-to-weakmap",
            "name": "WeakMap: Change to WeakMap",
            "description": null
        },
        {
            "id": "weakmap-use-only-object-keys",
            "name": "WeakMap: Use only object keys",
            "description": null
        },
        {
            "id": "weakmap-set-ussouthernstates-to-null",
            "name": "WeakMap: Set usSouthernStates to null",
            "description": null
        },
        {
            "id": "weakmap-make-helper-truly-private",
            "name": "WeakMap: Make Helper truly private",
            "description": null
        },
        {
            "id": "weakmap-use-map-for-multiple-instances",
            "name": "WeakMap: Use map for multiple instances",
            "description": null
        },
        {
            "id": "weakmap-gc-experiment-with-map",
            "name": "WeakMap: GC experiment with Map",
            "description": null
        },
        {
            "id": "weakmap-using-weakmap-for-gc",
            "name": "WeakMap: Using WeakMap for GC",
            "description": null
        },
        {
            "id": "weakmap-removing-debug-code",
            "name": "WeakMap: Removing debug code",
            "description": null
        },
        {
            "id": "array-use-array-with-includes",
            "name": "Array: Use array with includes",
            "description": null
        },
        {
            "id": "array-create-in-normal-way",
            "name": "Array: Create in normal way",
            "description": null
        },
        {
            "id": "array-pass-array-into-helper",
            "name": "Array: Pass array into Helper",
            "description": null
        },
        {
            "id": "array-fix-removing-replogs",
            "name": "Array: Fix removing replogs",
            "description": null
        },
        {
            "id": "set-create-array-of-foods",
            "name": "Set: Create array of foods",
            "description": null
        },
        {
            "id": "set-use-set-items-are-unique",
            "name": "Set: Use Set, items are unique",
            "description": null
        },
        {
            "id": "babel-init-yarn",
            "name": "Babel: Init yarn",
            "description": null
        },
        {
            "id": "babel-install-babel-cli",
            "name": "Babel: Install babel-cli",
            "description": null
        },
        {
            "id": "babel-transpile-replogapp-js",
            "name": "Babel: Transpile RepLogApp.js",
            "description": null
        },
        {
            "id": "babel-install-use-env-preset",
            "name": "Babel: Install & use env preset",
            "description": null
        },
        {
            "id": "changes-feature-changes-before-webpack",
            "name": "Changes: Feature changes before webpack",
            "description": null
        },
        {
            "id": "changes-upgrade-symfony",
            "name": "Changes: Upgrade Symfony",
            "description": null
        },
        {
            "id": "changes-upgrading-to-symfony-4",
            "name": "Changes: Upgrading to Symfony 4",
            "description": null
        },
        {
            "id": "changes-upgrading-sweetalert",
            "name": "Changes: Upgrading SweetAlert",
            "description": null
        },
        {
            "id": "changes-cleanup",
            "name": "Changes: Cleanup",
            "description": null
        },
        {
            "id": "changes-fixing-after-upgrade",
            "name": "Changes: Fixing after upgrade",
            "description": null
        },
        {
            "id": "require-require-reploghelper",
            "name": "Require: require RepLogHelper",
            "description": null
        },
        {
            "id": "require-install-encore",
            "name": "Require: install Encore",
            "description": null
        },
        {
            "id": "require-ignore-node-modules",
            "name": "Require: Ignore node_modules",
            "description": null
        },
        {
            "id": "require-first-webpack-config-js",
            "name": "Require: First webpack.config.js",
            "description": null
        },
        {
            "id": "notifier-enable-desktop-notifications",
            "name": "Notifier: Enable desktop notifications",
            "description": null
        },
        {
            "id": "outside-deps-install-jquery",
            "name": "Outside Deps: Install jQuery",
            "description": null
        },
        {
            "id": "outside-deps-install-sweetalert",
            "name": "Outside Deps: Install SweetAlert",
            "description": null
        },
        {
            "id": "components-remove-self-executing-func",
            "name": "Components: Remove self-executing func",
            "description": null
        },
        {
            "id": "components-real-rep-log-js-entry",
            "name": "Components: real rep_log.js entry",
            "description": null
        },
        {
            "id": "components-reorg-to-components-dir",
            "name": "Components: Reorg to Components dir",
            "description": null
        },
        {
            "id": "multientries-login-entry",
            "name": "MultiEntries: login entry",
            "description": null
        },
        {
            "id": "multientries-layout-entry",
            "name": "MultiEntries: layout entry",
            "description": null
        },
        {
            "id": "legacy-jquery-require-in-layout",
            "name": "Legacy jQuery: Require $ in layout",
            "description": null
        },
        {
            "id": "legacy-jquery-install-bootstrap",
            "name": "Legacy jQuery: Install Bootstrap",
            "description": null
        },
        {
            "id": "legacy-jquery-remove-global-scripts",
            "name": "Legacy jQuery: Remove global scripts",
            "description": null
        },
        {
            "id": "legacy-jquery-set-global-jquery",
            "name": "Legacy jQuery: Set global jQuery",
            "description": null
        },
        {
            "id": "legacy-jquery-autoprovidejquery",
            "name": "Legacy jQuery: autoProvidejQuery()",
            "description": null
        },
        {
            "id": "css-require-login-css",
            "name": "CSS: require login.css",
            "description": null
        },
        {
            "id": "css-require-from-layout",
            "name": "CSS require from layout",
            "description": null
        },
        {
            "id": "css-require-bootstrap",
            "name": "CSS: require bootstrap",
            "description": null
        },
        {
            "id": "css-require-fontawesome",
            "name": "CSS: Require fontawesome",
            "description": null
        },
        {
            "id": "copy-move-assets-to-root",
            "name": "Copy: Move assets to root",
            "description": null
        },
        {
            "id": "copy-install-the-copy-plugin",
            "name": "Copy: Install the copy plugin",
            "description": null
        },
        {
            "id": "copy-copy-the-image",
            "name": "Copy: copy the image",
            "description": null
        },
        {
            "id": "sass-try-to-use-sass",
            "name": "Sass: Try to use Sass",
            "description": null
        },
        {
            "id": "sass-install-enable-loader",
            "name": "Sass: Install & enable loader",
            "description": null
        },
        {
            "id": "sourcemaps-enable-them",
            "name": "Sourcemaps: Enable them!",
            "description": null
        },
        {
            "id": "fosjsroutingbundle-try-to-require-it",
            "name": "FOSJsRoutingBundle: Try to require it",
            "description": null
        },
        {
            "id": "fosjsroutingbundle-fake-module",
            "name": "FOSJsRoutingBundle: Fake module",
            "description": null
        },
        {
            "id": "import-use-import",
            "name": "Import: Use import",
            "description": null
        },
        {
            "id": "import-use-export",
            "name": "Import: Use export",
            "description": null
        },
        {
            "id": "import-use-import-export-everywhere",
            "name": "Import: use import\/export everywhere",
            "description": null
        },
        {
            "id": "commons-add-common-entry",
            "name": "Commons: Add common entry",
            "description": null
        },
        {
            "id": "scripts-add-package-json-scripts",
            "name": "Scripts: Add package.json scripts",
            "description": null
        },
        {
            "id": "versioning-enable-use-it",
            "name": "Versioning: Enable & use it",
            "description": null
        },
        {
            "id": "pre-react-upgrade-symfony-deps",
            "name": "PRE_REACT: Upgrade Symfony deps",
            "description": null
        },
        {
            "id": "pre-react-upgrade-yarn-deps",
            "name": "PRE_REACT: Upgrade yarn deps",
            "description": null
        },
        {
            "id": "pre-react-remove-babelrc-file",
            "name": "PRE_REACT: Remove .babelrc file",
            "description": null
        },
        {
            "id": "pre-react-minor-markup-cleanup",
            "name": "PRE_REACT: Minor markup cleanup",
            "description": null
        },
        {
            "id": "pre-react-secure-reps-endpoints",
            "name": "PRE_REACT: Secure \/reps endpoints",
            "description": null
        },
        {
            "id": "pre-react-return-replog-on-post",
            "name": "PRE_REACT: Return repLog on POST",
            "description": null
        },
        {
            "id": "pre-react-update-webpack-to-use-dev-server",
            "name": "PRE_REACT: Update webpack to use dev-server",
            "description": null
        },
        {
            "id": "pre-react-removing-extra-form-liftcontroller",
            "name": "PRE_REACT: Removing extra form LiftController",
            "description": null
        },
        {
            "id": "pre-react-replace-node-sass-with-sass",
            "name": "PRE_REACT: replace node-sass with sass",
            "description": null
        },
        {
            "id": "pre-react-updating-readme-for-yarn",
            "name": "PRE_REACT: Updating Readme for yarn",
            "description": null
        },
        {
            "id": "eslint-install-configure-eslint",
            "name": "Eslint: Install\/configure eslint",
            "description": null
        },
        {
            "id": "first-react-create-rep-log-react-js",
            "name": "First React: Create rep_log_react.js",
            "description": null
        },
        {
            "id": "first-react-install-react",
            "name": "First React: Install React",
            "description": null
        },
        {
            "id": "first-react-react-createelement-log",
            "name": "First React: React.createElement & log",
            "description": null
        },
        {
            "id": "first-react-reactdom-render",
            "name": "First React: ReactDOM.render()",
            "description": null
        },
        {
            "id": "first-react-createelement-with-nested",
            "name": "First React: createElement with nested",
            "description": null
        },
        {
            "id": "jsx-show-first-jsx",
            "name": "JSX: Show first JSX!",
            "description": null
        },
        {
            "id": "jsx-install-eslint-plugin-react",
            "name": "JSX: Install eslint-plugin-react",
            "description": null
        },
        {
            "id": "jsx-create-first-class-component",
            "name": "JSX: Create first class component",
            "description": null
        },
        {
            "id": "jsx-import-component",
            "name": "JSX: Import { Component }",
            "description": null
        },
        {
            "id": "jsx-only-import-render",
            "name": "JSX: Only import render",
            "description": null
        },
        {
            "id": "jsx-extract-to-replogapp-js",
            "name": "JSX: Extract to RepLogApp.js",
            "description": null
        },
        {
            "id": "jsx-export-import-module",
            "name": "JSX: Export & import module",
            "description": null
        },
        {
            "id": "jsx-pass-withheart-prop",
            "name": "JSX: Pass withHeart prop",
            "description": null
        },
        {
            "id": "jsx-render-2-replogapp",
            "name": "JSX: Render 2 RepLogApp",
            "description": null
        },
        {
            "id": "jsx-wrap-2-inside-div",
            "name": "JSX: Wrap 2 inside <div>",
            "description": null
        },
        {
            "id": "jsx-go-back-to-one-element",
            "name": "JSX: Go back to one element",
            "description": null
        },
        {
            "id": "collection-wrap-in-div-with-classname",
            "name": "Collection: Wrap in div with className",
            "description": null
        },
        {
            "id": "collection-copy-in-table",
            "name": "Collection: Copy in table",
            "description": null
        },
        {
            "id": "collection-cleanup-table",
            "name": "Collection: Cleanup table",
            "description": null
        },
        {
            "id": "collection-use-array-to-render",
            "name": "Collection: Use array to render",
            "description": null
        },
        {
            "id": "collection-add-key",
            "name": "Collection: Add key",
            "description": null
        },
        {
            "id": "collection-render-inline",
            "name": "Collection: Render inline",
            "description": null
        },
        {
            "id": "collection-use-simpler-arrow-func",
            "name": "Collection: Use simpler arrow func",
            "description": null
        },
        {
            "id": "form-copy-html-form",
            "name": "Form: Copy HTML form",
            "description": null
        },
        {
            "id": "form-remove-extra-stuff",
            "name": "Form: Remove extra stuff",
            "description": null
        },
        {
            "id": "form-add-manual-whitespace-for-styling",
            "name": "Form: Add manual whitespace for styling",
            "description": null
        },
        {
            "id": "state-add-highlightedrowid-state",
            "name": "State: Add highlightedRowId state",
            "description": null
        },
        {
            "id": "state-destructure-the-props-also",
            "name": "State: destructure the props also",
            "description": null
        },
        {
            "id": "state-add-onclick-with-log",
            "name": "State: Add onClick with log",
            "description": null
        },
        {
            "id": "state-add-onclick-to-set-state",
            "name": "State: Add onClick to set state",
            "description": null
        },
        {
            "id": "state-add-e-arg-to-onclick",
            "name": "State: Add e arg to onClick",
            "description": null
        },
        {
            "id": "state-refactor-to-handlerowclick",
            "name": "State: Refactor to handleRowClick()",
            "description": null
        },
        {
            "id": "child-element-create-reploglist",
            "name": "Child Element: Create RepLogList",
            "description": null
        },
        {
            "id": "child-element-pass-highlightdrowid-as-prop",
            "name": "Child Element: Pass highlightdRowId as prop",
            "description": null
        },
        {
            "id": "child-element-pass-in-handlerowclick",
            "name": "Child Element: Pass in handleRowClick",
            "description": null
        },
        {
            "id": "child-element-bind-handlerowclick-to-this",
            "name": "Child Element: Bind handleRowClick to this",
            "description": null
        },
        {
            "id": "dumbcomponent-refactor-to-functional",
            "name": "DumbComponent: Refactor to functional",
            "description": null
        },
        {
            "id": "dumbcomponent-this-props-props",
            "name": "DumbComponent: this.props -> props",
            "description": null
        },
        {
            "id": "smartcomponent-create-replogs-prez",
            "name": "SmartComponent: Create RepLogs prez",
            "description": null
        },
        {
            "id": "smartcomponent-pass-props",
            "name": "SmartComponent: Pass props",
            "description": null
        },
        {
            "id": "proptypes-install-prop-types",
            "name": "PropTypes: Install prop-types",
            "description": null
        },
        {
            "id": "proptypes-specify-reploglist-types",
            "name": "PropTypes: Specify RepLogList types",
            "description": null
        },
        {
            "id": "proptypes-set-as-required",
            "name": "PropTypes: Set as required",
            "description": null
        },
        {
            "id": "proptypes-re-add-prop",
            "name": "PropTypes: Re-add prop",
            "description": null
        },
        {
            "id": "proptypes-add-withheart-proptype",
            "name": "PropTypes: Add withHeart propType",
            "description": null
        },
        {
            "id": "proptypes-add-babel-plugin-transform-react-remove-prop-types",
            "name": "PropTypes: Add babel-plugin-transform-react-remove-prop-types",
            "description": null
        },
        {
            "id": "proptypes-fix-plugin-registration",
            "name": "PropTypes: Fix plugin registration",
            "description": null
        },
        {
            "id": "state-refactor-reploglist-to-expect-replogs-prop",
            "name": "State: Refactor RepLogList to expect repLogs prop",
            "description": null
        },
        {
            "id": "state-add-replogs-state-to-replogapp",
            "name": "State: Add repLogs state to RepLogApp",
            "description": null
        },
        {
            "id": "state-use-jsx-spread-attributes",
            "name": "State: Use JSX spread attributes",
            "description": null
        },
        {
            "id": "state-printing-total-weight-lifted",
            "name": "State: Printing total weight lifted",
            "description": null
        },
        {
            "id": "state-show-fancier-way-to-calculate-total-weight",
            "name": "State: Show fancier way to calculate total weight",
            "description": null
        },
        {
            "id": "form-add-handler-preventdefault",
            "name": "Form: Add handler & preventDefault",
            "description": null
        },
        {
            "id": "form-get-named-item-value",
            "name": "Form: Get named item value",
            "description": null
        },
        {
            "id": "form-move-handler-to-replogs",
            "name": "Form: Move handler to RepLogs",
            "description": null
        },
        {
            "id": "form-call-handler-callback-with-data",
            "name": "Form: Call handler callback with data",
            "description": null
        },
        {
            "id": "form-create-functional-replogcreator",
            "name": "Form: Create functional RepLogCreator",
            "description": null
        },
        {
            "id": "form-copy-form-to-replogcreator",
            "name": "Form: Copy form to RepLogCreator",
            "description": null
        },
        {
            "id": "form-move-handler-to-replogcreator",
            "name": "Form: Move handler to RepLogCreator",
            "description": null
        },
        {
            "id": "form-pass-onnewitemsubmit-to-replogcreator",
            "name": "Form: Pass onNewItemSubmit to RepLogCreator",
            "description": null
        },
        {
            "id": "form-change-replogcreator-to-class",
            "name": "Form: Change RepLogCreator to class",
            "description": null
        },
        {
            "id": "form-move-handle-into-replogcreator-class",
            "name": "Form: Move handle into RepLogCreator class",
            "description": null
        },
        {
            "id": "form-bind-callback-submit-handle-function",
            "name": "Form: Bind callback submit handle function",
            "description": null
        },
        {
            "id": "refs-assign-quanity-item-refs",
            "name": "Refs: Assign quanity & item refs",
            "description": null
        },
        {
            "id": "refs-print-values",
            "name": "Refs: Print values",
            "description": null
        },
        {
            "id": "refs-update-replogs-state",
            "name": "Refs: Update repLogs state",
            "description": null
        },
        {
            "id": "refs-bind-replogapp-handlenewitemsubmit",
            "name": "Refs: bind RepLogApp.handleNewItemSubmit",
            "description": null
        },
        {
            "id": "refs-install-uuid",
            "name": "Refs: install uuid",
            "description": null
        },
        {
            "id": "refs-use-uuid",
            "name": "Refs: Use uuid",
            "description": null
        },
        {
            "id": "refs-clear-inputs-submit",
            "name": "Refs: Clear inputs & submit",
            "description": null
        },
        {
            "id": "immutability-set-state-without-mutation",
            "name": "Immutability: Set state without mutation",
            "description": null
        },
        {
            "id": "immutability-use-setstate-callback",
            "name": "Immutability: Use setState() callback",
            "description": null
        },
        {
            "id": "replogcreator-rename-handler-method",
            "name": "RepLogCreator: Rename handler method",
            "description": null
        },
        {
            "id": "replogcreator-use-multiline-props-in-replogs",
            "name": "RepLogCreator: Use multiline props in RepLogs",
            "description": null
        },
        {
            "id": "replogcreator-make-itemoptions-array",
            "name": "RepLogCreator: Make itemOptions array",
            "description": null
        },
        {
            "id": "validation-add-if-logic-for-quantity",
            "name": "Validation: Add if logic for quantity",
            "description": null
        },
        {
            "id": "validation-set-quantityinputerror-state",
            "name": "Validation: Set quantityInputError state",
            "description": null
        },
        {
            "id": "validation-print-error-message",
            "name": "Validation: Print error message",
            "description": null
        },
        {
            "id": "validation-improve-styling",
            "name": "Validation: Improve styling",
            "description": null
        },
        {
            "id": "controlledinput-add-input-field-to-replogapp",
            "name": "ControlledInput: Add input field to RepLogApp",
            "description": null
        },
        {
            "id": "controlledinput-set-value-to-state",
            "name": "ControlledInput: Set value to state",
            "description": null
        },
        {
            "id": "controlledinput-add-onchange",
            "name": "ControlledInput: Add onChange",
            "description": null
        },
        {
            "id": "controlledinput-cast-to-integer",
            "name": "ControlledInput: Cast to integer",
            "description": null
        },
        {
            "id": "controlledinput-use-range-input",
            "name": "ControlledInput: Use range input",
            "description": null
        },
        {
            "id": "creatorwithstate-duplicate-to-replogcreatorcontrolledcomponents",
            "name": "CreatorWithState: Duplicate to RepLogCreatorControlledComponents",
            "description": null
        },
        {
            "id": "creatorwithstate-set-inputs-to-state",
            "name": "CreatorWithState: Set inputs to state",
            "description": null
        },
        {
            "id": "creatorwithstate-add-change-handlers",
            "name": "CreatorWithState: Add change handlers",
            "description": null
        },
        {
            "id": "creatorwithstate-use-proper-option-text",
            "name": "CreatorWithState: Use proper option text",
            "description": null
        },
        {
            "id": "creatorwithstate-use-old-component",
            "name": "CreatorWithState: Use old component",
            "description": null
        },
        {
            "id": "delete-add-delete-link",
            "name": "Delete: Add delete link",
            "description": null
        },
        {
            "id": "delete-add-handler-functions",
            "name": "Delete: Add handler functions",
            "description": null
        },
        {
            "id": "delete-update-replogs-state",
            "name": "Delete: Update repLogs state",
            "description": null
        },
        {
            "id": "delete-use-setstate-callback",
            "name": "Delete: Use setState() callback",
            "description": null
        },
        {
            "id": "fetch-make-first-test-fetch",
            "name": "Fetch: Make first test fetch()",
            "description": null
        },
        {
            "id": "fetch-send-credentials",
            "name": "Fetch: Send credentials",
            "description": null
        },
        {
            "id": "fetch-update-replogs-state",
            "name": "Fetch: Update repLogs state",
            "description": null
        },
        {
            "id": "fetch-add-isloaded-loading-text",
            "name": "Fetch: Add isLoaded loading text",
            "description": null
        },
        {
            "id": "fetch-delete-replog",
            "name": "Fetch: Delete replog",
            "description": null
        },
        {
            "id": "fetch-add-wrapper-function",
            "name": "Fetch: Add wrapper function",
            "description": null
        },
        {
            "id": "fetch-add-createreplog",
            "name": "Fetch: Add createRepLog",
            "description": null
        },
        {
            "id": "fetch-refactor-to-send-correct-things-to-post",
            "name": "Fetch: Refactor to send correct things to POST",
            "description": null
        },
        {
            "id": "fetch-update-state-in-callback",
            "name": "Fetch: Update state in callback",
            "description": null
        },
        {
            "id": "fetch-polyfill-fetch",
            "name": "Fetch: Polyfill fetch",
            "description": null
        },
        {
            "id": "fetch-polyfill-promise",
            "name": "Fetch: Polyfill promise",
            "description": null
        },
        {
            "id": "loading-add-loading-row",
            "name": "Loading: Add loading row",
            "description": null
        },
        {
            "id": "loading-add-success-message",
            "name": "Loading: Add success message",
            "description": null
        },
        {
            "id": "loading-settimeout-hide-success",
            "name": "Loading: setTimeout hide success",
            "description": null
        },
        {
            "id": "loading-cleartimeout-on-success",
            "name": "Loading: clearTimeout on success",
            "description": null
        },
        {
            "id": "loading-fix-delete-json-error",
            "name": "Loading: Fix delete JSON error",
            "description": null
        },
        {
            "id": "loading-also-success-on-delete",
            "name": "Loading: Also success on delete",
            "description": null
        },
        {
            "id": "loading-change-delete-state-after-ajax",
            "name": "Loading: Change delete state after AJAX",
            "description": null
        },
        {
            "id": "loading-setting-isdeleting-row-state",
            "name": "Loading: Setting isDeleting row state",
            "description": null
        },
        {
            "id": "loading-remove-tmp-return-stmt",
            "name": "Loading: Remove tmp return stmt",
            "description": null
        },
        {
            "id": "loading-empty-delete-me-2",
            "name": "Loading: Empty delete me 2",
            "description": null
        },
        {
            "id": "server-validation-throw-on-api-errors",
            "name": "Server Validation: Throw on API errors",
            "description": null
        },
        {
            "id": "server-validation-catch-print-response",
            "name": "Server Validation: catch & print response",
            "description": null
        },
        {
            "id": "server-validation-json-decode-the-errors",
            "name": "Server Validation: json decode the errors",
            "description": null
        },
        {
            "id": "server-validation-set-a-form-error-state",
            "name": "Server Validation: Set a form error state",
            "description": null
        },
        {
            "id": "server-validation-hiding-loading-row-on-error",
            "name": "Server Validation: Hiding loading row on error",
            "description": null
        },
        {
            "id": "server-validation-use-object-spread",
            "name": "Server Validation: Use object spread",
            "description": null
        },
        {
            "id": "server-validation-more-object-spread",
            "name": "Server Validation: More object spread",
            "description": null
        },
        {
            "id": "initial-data-move-itemoptions-to-state",
            "name": "Initial Data: Move itemOptions to state",
            "description": null
        },
        {
            "id": "initial-data-add-defaultprops-itemoptions",
            "name": "Initial Data: Add defaultProps itemOptions",
            "description": null
        },
        {
            "id": "initial-data-default-props",
            "name": "Initial Data: default props",
            "description": null
        },
        {
            "id": "initial-data-pass-in-initialstate",
            "name": "Initial Data: Pass in initialState",
            "description": null
        },
        {
            "id": "initial-data-spread-all-props",
            "name": "Initial Data: Spread all props",
            "description": null
        },
        {
            "id": "initial-data-also-pass-withheart",
            "name": "Initial Data: Also pass withHeart",
            "description": null
        },
        {
            "id": "initial-data-dump-replog-getthingsyoucanliftchoices",
            "name": "Initial Data: Dump RepLog::getThingsYouCanLiftChoices()",
            "description": null
        },
        {
            "id": "initial-data-loop-to-create-items-structure",
            "name": "Initial Data: Loop to create items structure",
            "description": null
        },
        {
            "id": "initial-data-print-and-json-encode-data",
            "name": "Initial Data: Print and json_encode data",
            "description": null
        },
        {
            "id": "cleanup-remove-old-code",
            "name": "Cleanup: Remove old code",
            "description": null
        },
        {
            "id": "cleanup-move-col-class-to-template",
            "name": "Cleanup: Move col- class to template",
            "description": null
        },
        {
            "id": "children-create-button-component",
            "name": "Children: Create Button component",
            "description": null
        },
        {
            "id": "children-use-props-children",
            "name": "Children: Use props.children",
            "description": null
        },
        {
            "id": "children-allow-classname-to-be-passed",
            "name": "Children: Allow className to be passed",
            "description": null
        },
        {
            "id": "children-destructure-classname-separately",
            "name": "Children: Destructure className separately",
            "description": null
        },
        {
            "id": "csrf-install-maker",
            "name": "CSRF: Install maker",
            "description": null
        },
        {
            "id": "csrf-generate-subscriber",
            "name": "CSRF: Generate subscriber",
            "description": null
        },
        {
            "id": "csrf-avoid-safe-methods",
            "name": "CSRF: Avoid safe methods",
            "description": null
        },
        {
            "id": "csrf-annotate-route",
            "name": "CSRF: Annotate route",
            "description": null
        },
        {
            "id": "csrf-add-apiroute",
            "name": "CSRF: Add ApiRoute",
            "description": null
        },
        {
            "id": "csrf-finish-apiroute",
            "name": "CSRF: Finish ApiRoute",
            "description": null
        },
        {
            "id": "csrf-avoid-non-api-routes",
            "name": "CSRF: Avoid non-API routes",
            "description": null
        },
        {
            "id": "csrf-check-content-type-header",
            "name": "CSRF: Check Content-Type header",
            "description": null
        },
        {
            "id": "csrf-checking-the-csrf-token",
            "name": "CSRF: Checking the CSRF Token",
            "description": null
        },
        {
            "id": "csrf-pass-csrf-in-ajax",
            "name": "CSRF: Pass CSRF in AJAX",
            "description": null
        },
        {
            "id": "csrf-use-new-id-each-time",
            "name": "CSRF: Use new id each time",
            "description": null
        },
        {
            "id": "csrf-store-new-token-in-javascript",
            "name": "CSRF: Store new token in JavaScript",
            "description": null
        }
    ],
    "sha": "b23556944d1ac0a4474d14ecad02e7fc0d4cebaf"
}